{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","TASKS_URL","TASKS_URLs","App","useState","count","setCount","add","a","get","withCredentials","data","console","log","add2","add3","add4","className","src","logo","alt","href","target","rel","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,MAA0B,iC,eCGnCA,EAAQC,EAAQ,IAASC,QAGzBC,EAAY,gEACZC,EAAa,sEAqFJC,MAnFf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,KAGPC,EAAG,uCAAG,8BAAAC,EAAA,6DACVF,EAASD,EAAQ,GADP,SAGeP,EAAMW,IAAN,UAClBR,EADkB,SAErB,GAGA,CAAES,iBAAiB,IARb,gBAGAC,EAHA,EAGAA,KAQVC,QAAQC,IAAI,IAAKF,GAXP,2CAAH,qDAcHG,EAAI,uCAAG,8BAAAN,EAAA,6DACXF,EAASD,EAAQ,GADN,SAGcP,EAAMW,IAAN,UAClBR,EADkB,QAErB,GAGA,CAAES,iBAAiB,IARZ,gBAGDC,EAHC,EAGDA,KAQVC,QAAQC,IAAI,IAAKF,GAXN,2CAAH,qDAcJI,EAAI,uCAAG,8BAAAP,EAAA,6DACXF,EAASD,EAAQ,GADN,SAGcP,EAAMW,IAAN,UAClBP,EADkB,SAErB,GAGA,CAAEQ,iBAAiB,IARZ,gBAGDC,EAHC,EAGDA,KAQVC,QAAQC,IAAI,IAAKF,GAXN,2CAAH,qDAcJK,EAAI,uCAAG,8BAAAR,EAAA,6DACXF,EAASD,EAAQ,GADN,SAGcP,EAAMW,IAAN,UAClBP,EADkB,QAErB,GAGA,CAAEQ,iBAAiB,IARZ,gBAGDC,EAHC,EAGDA,KAQVC,QAAQC,IAAI,IAAKF,GAXN,2CAAH,qDAcV,OACE,qBAAKM,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,wBAAQC,KAAK,SAASC,QAASlB,EAA/B,eACA,wBAAQiB,KAAK,SAASC,QAASX,EAA/B,eACA,wBAAQU,KAAK,SAASC,QAASV,EAA/B,eACA,wBAAQS,KAAK,SAASC,QAAST,EAA/B,qBC1EOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5be44a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nconst axios = require('axios').default;\n\n// const TASKS_URL = \"http://localhost:4000\"\nconst TASKS_URL = \"http://ec2-15-165-220-68.ap-northeast-2.compute.amazonaws.com\"\nconst TASKS_URLs = \"https://ec2-15-165-220-68.ap-northeast-2.compute.amazonaws.com:3000\"\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  const add = async() => {\n    setCount(count + 1);\n\n      const { data } = await axios.get(\n        `${TASKS_URL}:3000`,\n        {\n\n        },\n        { withCredentials: true }\n      );\n\n    console.log(\"a\", data)\n  }\n\n  const add2 = async() => {\n    setCount(count + 1);\n\n      const { data } = await axios.get(\n        `${TASKS_URL}:443`,\n        {\n\n        },\n        { withCredentials: true }\n      );\n\n    console.log(\"a\", data)\n  }\n\n  const add3 = async() => {\n    setCount(count + 1);\n\n      const { data } = await axios.get(\n        `${TASKS_URLs}:3000`,\n        {\n\n        },\n        { withCredentials: true }\n      );\n\n    console.log(\"a\", data)\n  }\n\n  const add4 = async() => {\n    setCount(count + 1);\n\n      const { data } = await axios.get(\n        `${TASKS_URLs}:443`,\n        {\n\n        },\n        { withCredentials: true }\n      );\n\n    console.log(\"a\", data)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <button type=\"button\" onClick={add}>1</button>\n        <button type=\"button\" onClick={add2}>2</button>\n        <button type=\"button\" onClick={add3}>3</button>\n        <button type=\"button\" onClick={add4}>4</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}